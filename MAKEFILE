# ------------------------------------------------------------------------------------------------------------------
# CONFIGURATION
# ------------------------------------------------------------------------------------------------------------------
# コンパイラ
CC = g++

# ターゲット名 (生成される実行ファイル名)
TARGET = yycg.exe

# ソースディレクトリとバイナリディレクトリ
SRCDIR = ./src
BINDIR = ./bin

# コンパイルオプション
OPTIMIZE = -O2 -std=c++23 -DYAML_CPP_STATIC_DEFINE

# その他のコンパイルフラグ（警告を厳しくする設定を推奨）
CFLAGS = -Wall -Wextra -pedantic -I$(SRCDIR)

# リンクフラグ (必要に応じてライブラリを追加)
LDFLAGS = 

# ------------------------------------------------------------------------------------------------------------------
# FILE FINDING
# ------------------------------------------------------------------------------------------------------------------
# SRCDIR内の全ての.cppファイルを探す
SOURCES := $(wildcard $(SRCDIR)/*.cpp)

# .cppファイル名から、対応するオブジェクト(.o)ファイル名をBINDIR配下で生成
OBJECTS := $(patsubst $(SRCDIR)/%.cpp, $(BINDIR)/%.o, $(SOURCES))

# ------------------------------------------------------------------------------------------------------------------
# DEFAULT TARGET
# ------------------------------------------------------------------------------------------------------------------
.PHONY: all clean run

# デフォルトターゲット: binディレクトリを作成し、ターゲットをビルド
all: $(BINDIR) $(TARGET)

# ------------------------------------------------------------------------------------------------------------------
# RULES
# ------------------------------------------------------------------------------------------------------------------

# BINDIRを作成する
$(BINDIR):
	@mkdir -p $(BINDIR)

# 最終ターゲット (.exe) のルール: 全てのオブジェクトをリンクする
$(TARGET): $(OBJECTS)
	@echo "Linking $< to create $@"
	$(CC) $(OPTIMIZE) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# オブジェクト (.o) ファイルのルール: 対応する.cppファイルからビルドする
# $^ は依存ファイル (ここでは .cpp)
$(BINDIR)/%.o: $(SRCDIR)/%.cpp $(SRCDIR)/%.hpp
	@echo "Compiling $<"
	$(CC) $(OPTIMIZE) $(CFLAGS) -c $< -o $@

# ------------------------------------------------------------------------------------------------------------------
# UTILITIES
# ------------------------------------------------------------------------------------------------------------------

# ビルドしたオブジェクトファイルとターゲットを削除する
clean:
	@echo "Cleaning up build directory..."
	$(RM) $(BINDIR)/*.o
	$(RM) $(TARGET)
	@rmdir --ignore-fail-on-non-empty $(BINDIR) 2>/dev/null || true

# 実行
run: $(TARGET)
	@echo "Running $(TARGET)..."
	@./$(TARGET)

# ------------------------------------------------------------------------------------------------------------------